import vine from '@vinejs/vine'

/**
 * Validator to validate the payload when creating
 * a new inventory item.
 */
export const createInventoryValidator = vine.compile(
  vine.object({
    hotelId: vine.number().positive(),
    itemCode: vine.string().trim().minLength(1).maxLength(50),
    itemName: vine.string().trim().minLength(1).maxLength(255),
    description: vine.string().trim().optional(),
    category: vine.string().trim().minLength(1).maxLength(100),
    subcategory: vine.string().trim().maxLength(100).optional(),
    brand: vine.string().trim().maxLength(100).optional(),
    model: vine.string().trim().maxLength(100).optional(),
    sku: vine.string().trim().maxLength(100).optional(),
    barcode: vine.string().trim().maxLength(100).optional(),
    unitOfMeasure: vine.enum(['unit', 'kg', 'liter', 'box', 'piece', 'gallon', 'pound', 'meter', 'case', 'pack', 'bottle', 'can', 'roll', 'sheet', 'other']),
    currentStock: vine.number().min(0).optional(),
    minimumStock: vine.number().min(0).optional(),
    maximumStock: vine.number().min(0).optional(),
    reorderPoint: vine.number().min(0).optional(),
    reorderQuantity: vine.number().min(0).optional(),
    unitCost: vine.number().min(0).optional(),
    totalValue: vine.number().min(0).optional(),
    supplierName: vine.string().trim().maxLength(200).optional(),
    supplierContact: vine.string().trim().maxLength(200).optional(),
    supplierEmail: vine.string().email().maxLength(200).optional(),
    supplierPhone: vine.string().trim().maxLength(50).optional(),
    leadTimeDays: vine.number().min(0).optional(),
    lastOrderDate: vine.date().optional(),
    nextOrderDate: vine.date().optional(),
    expiryDate: vine.date().optional(),
    shelfLifeDays: vine.number().min(0).optional(),
    storageLocation: vine.string().trim().maxLength(200).optional(),
    storageRequirements: vine.enum(['room_temperature', 'refrigerated', 'frozen', 'dry', 'climate_controlled', 'hazardous', 'secure', 'special']).optional(),
    isPerishable: vine.boolean().optional(),
    isHazardous: vine.boolean().optional(),
    safetyInstructions: vine.string().trim().optional(),
    requiresTraining: vine.boolean().optional(),
    usageInstructions: vine.string().trim().optional(),
    specifications: vine.object({}).optional(),
    warrantyPeriod: vine.number().min(0).optional(),
    purchaseDate: vine.date().optional(),
    warrantyExpiry: vine.date().optional(),
    serialNumber: vine.string().trim().maxLength(100).optional(),
    condition: vine.enum(['new', 'good', 'fair', 'poor', 'damaged', 'obsolete']).optional(),
    isActive: vine.boolean().optional(),
    isConsumable: vine.boolean().optional(),
    averageUsagePerDay: vine.number().min(0).optional(),
    averageUsagePerMonth: vine.number().min(0).optional(),
    usageVariance: vine.number().optional(),
    lastInventoryDate: vine.date().optional(),
    lastInventoryCount: vine.number().min(0).optional(),
    inventoryVariance: vine.number().optional(),
    autoReorder: vine.boolean().optional(),
    usageTracking: vine.object({}).optional(),
    maintenanceSchedule: vine.object({}).optional(),
    lastMaintenanceDate: vine.date().optional(),
    nextMaintenanceDate: vine.date().optional(),
    imageUrls: vine.object({}).optional(),
    documentUrls: vine.object({}).optional(),
    internalNotes: vine.string().trim().optional(),
    status: vine.enum(['active', 'inactive', 'discontinued', 'backordered', 'out_of_stock']).optional()
  })
)

/**
 * Validator to validate the payload when updating
 * an existing inventory item.
 */
export const updateInventoryValidator = vine.compile(
  vine.object({
    hotelId: vine.number().positive().optional(),
    itemCode: vine.string().trim().minLength(1).maxLength(50).optional(),
    itemName: vine.string().trim().minLength(1).maxLength(255).optional(),
    description: vine.string().trim().optional(),
    category: vine.string().trim().minLength(1).maxLength(100).optional(),
    subcategory: vine.string().trim().maxLength(100).optional(),
    brand: vine.string().trim().maxLength(100).optional(),
    model: vine.string().trim().maxLength(100).optional(),
    sku: vine.string().trim().maxLength(100).optional(),
    barcode: vine.string().trim().maxLength(100).optional(),
    unitOfMeasure: vine.enum(['unit', 'kg', 'liter', 'box', 'piece', 'gallon', 'pound', 'meter', 'case', 'pack', 'bottle', 'can', 'roll', 'sheet', 'other']).optional(),
    currentStock: vine.number().min(0).optional(),
    minimumStock: vine.number().min(0).optional(),
    maximumStock: vine.number().min(0).optional(),
    reorderPoint: vine.number().min(0).optional(),
    reorderQuantity: vine.number().min(0).optional(),
    unitCost: vine.number().min(0).optional(),
    totalValue: vine.number().min(0).optional(),
    supplierName: vine.string().trim().maxLength(200).optional(),
    supplierContact: vine.string().trim().maxLength(200).optional(),
    supplierEmail: vine.string().email().maxLength(200).optional(),
    supplierPhone: vine.string().trim().maxLength(50).optional(),
    leadTimeDays: vine.number().min(0).optional(),
    lastOrderDate: vine.date().optional(),
    nextOrderDate: vine.date().optional(),
    expiryDate: vine.date().optional(),
    shelfLifeDays: vine.number().min(0).optional(),
    storageLocation: vine.string().trim().maxLength(200).optional(),
    storageRequirements: vine.enum(['room_temperature', 'refrigerated', 'frozen', 'dry', 'climate_controlled', 'hazardous', 'secure', 'special']).optional(),
    isPerishable: vine.boolean().optional(),
    isHazardous: vine.boolean().optional(),
    safetyInstructions: vine.string().trim().optional(),
    requiresTraining: vine.boolean().optional(),
    usageInstructions: vine.string().trim().optional(),
    specifications: vine.object({}).optional(),
    warrantyPeriod: vine.number().min(0).optional(),
    purchaseDate: vine.date().optional(),
    warrantyExpiry: vine.date().optional(),
    serialNumber: vine.string().trim().maxLength(100).optional(),
    condition: vine.enum(['new', 'good', 'fair', 'poor', 'damaged', 'obsolete']).optional(),
    isActive: vine.boolean().optional(),
    isConsumable: vine.boolean().optional(),
    averageUsagePerDay: vine.number().min(0).optional(),
    averageUsagePerMonth: vine.number().min(0).optional(),
    usageVariance: vine.number().optional(),
    lastInventoryDate: vine.date().optional(),
    lastInventoryCount: vine.number().min(0).optional(),
    inventoryVariance: vine.number().optional(),
    autoReorder: vine.boolean().optional(),
    usageTracking: vine.object({}).optional(),
    maintenanceSchedule: vine.object({}).optional(),
    lastMaintenanceDate: vine.date().optional(),
    nextMaintenanceDate: vine.date().optional(),
    imageUrls: vine.object({}).optional(),
    documentUrls: vine.object({}).optional(),
    internalNotes: vine.string().trim().optional(),
    status: vine.enum(['active', 'inactive', 'discontinued', 'backordered', 'out_of_stock']).optional()
  })
)