import vine from '@vinejs/vine'

/**
 * Validator to validate the payload when creating
 * a new maintenance request.
 */
export const createMaintenanceRequestValidator = vine.compile(
  vine.object({
    hotelId: vine.number().positive(),
    roomId: vine.number().positive(),
    title: vine.string().trim().minLength(1).maxLength(255),
    description: vine.string().trim().minLength(1),
    category: vine.enum(['electrical', 'plumbing', 'hvac', 'furniture', 'appliances', 'structural', 'safety', 'technology', 'other']),
    subcategory: vine.string().trim().maxLength(100).optional(),
    priority: vine.enum(['low', 'normal', 'high', 'urgent', 'emergency']).optional(),
    status: vine.enum(['open', 'assigned', 'in_progress', 'on_hold', 'completed', 'cancelled', 'closed']).optional(),
    urgency: vine.enum(['low', 'medium', 'high', 'critical']).optional(),
    impact: vine.enum(['low', 'medium', 'high', 'critical']).optional(),
    assignedTo: vine.number().positive().optional(),
    scheduledDate: vine.date().optional(),
    dueDate: vine.date().optional(),
    estimatedDuration: vine.number().min(0).optional(),
    estimatedCost: vine.number().min(0).optional(),
    workOrderNumber: vine.string().trim().maxLength(50).optional(),
    vendorRequired: vine.boolean().optional(),
    vendorName: vine.string().trim().maxLength(200).optional(),
    vendorContact: vine.object({}).optional(),
    partsRequired: vine.object({}).optional(),
    partsOrdered: vine.object({}).optional(),
    partsReceived: vine.object({}).optional(),
    toolsRequired: vine.object({}).optional(),
    skillsRequired: vine.object({}).optional(),
    safetyRequirements: vine.object({}).optional(),
    permitRequired: vine.boolean().optional(),
    permitNumber: vine.string().trim().maxLength(50).optional(),
    inspectionRequired: vine.boolean().optional(),
    guestImpact: vine.boolean().optional(),
    roomOutOfOrder: vine.boolean().optional(),
    outOfOrderFrom: vine.date().optional(),
    outOfOrderTo: vine.date().optional(),
    revenueImpact: vine.number().min(0).optional(),
    guestCompensation: vine.number().min(0).optional(),
    insuranceClaim: vine.boolean().optional(),
    claimNumber: vine.string().trim().maxLength(50).optional(),
    warrantyWork: vine.boolean().optional(),
    warrantyProvider: vine.string().trim().maxLength(200).optional(),
    recurringIssue: vine.boolean().optional(),
    previousRequests: vine.object({}).optional(),
    rootCauseAnalysis: vine.string().trim().optional(),
    photos: vine.object({}).optional(),
    documents: vine.object({}).optional(),
    beforePhotos: vine.object({}).optional(),
    afterPhotos: vine.object({}).optional(),
    videoDocumentation: vine.object({}).optional(),
    communicationLog: vine.object({}).optional(),
    escalationHistory: vine.object({}).optional(),
    approvalRequired: vine.boolean().optional(),
    budgetCode: vine.string().trim().maxLength(50).optional(),
    costCenter: vine.string().trim().maxLength(50).optional(),
    assetTag: vine.string().trim().maxLength(50).optional(),
    serialNumber: vine.string().trim().maxLength(100).optional(),
    modelNumber: vine.string().trim().maxLength(100).optional(),
    manufacturer: vine.string().trim().maxLength(200).optional(),
    installationDate: vine.date().optional(),
    lastMaintenanceDate: vine.date().optional(),
    nextMaintenanceDate: vine.date().optional(),
    maintenanceHistory: vine.object({}).optional(),
    notes: vine.string().trim().optional(),
    internalNotes: vine.string().trim().optional()
  })
)

/**
 * Validator to validate the payload when updating
 * an existing maintenance request.
 */
export const updateMaintenanceRequestValidator = vine.compile(
  vine.object({
    hotelId: vine.number().positive().optional(),
    roomId: vine.number().positive().optional(),
    title: vine.string().trim().minLength(1).maxLength(255).optional(),
    description: vine.string().trim().minLength(1).optional(),
    category: vine.enum(['electrical', 'plumbing', 'hvac', 'furniture', 'appliances', 'structural', 'safety', 'technology', 'other']).optional(),
    subcategory: vine.string().trim().maxLength(100).optional(),
    priority: vine.enum(['low', 'normal', 'high', 'urgent', 'emergency']).optional(),
    status: vine.enum(['open', 'assigned', 'in_progress', 'on_hold', 'completed', 'cancelled', 'closed']).optional(),
    urgency: vine.enum(['low', 'medium', 'high', 'critical']).optional(),
    impact: vine.enum(['low', 'medium', 'high', 'critical']).optional(),
    assignedTo: vine.number().positive().optional(),
    scheduledDate: vine.date().optional(),
    dueDate: vine.date().optional(),
    estimatedDuration: vine.number().min(0).optional(),
    estimatedCost: vine.number().min(0).optional(),
    actualDuration: vine.number().min(0).optional(),
    actualCost: vine.number().min(0).optional(),
    workOrderNumber: vine.string().trim().maxLength(50).optional(),
    vendorRequired: vine.boolean().optional(),
    vendorName: vine.string().trim().maxLength(200).optional(),
    vendorContact: vine.object({}).optional(),
    partsRequired: vine.object({}).optional(),
    partsOrdered: vine.object({}).optional(),
    partsReceived: vine.object({}).optional(),
    toolsRequired: vine.object({}).optional(),
    skillsRequired: vine.object({}).optional(),
    safetyRequirements: vine.object({}).optional(),
    permitRequired: vine.boolean().optional(),
    permitNumber: vine.string().trim().maxLength(50).optional(),
    inspectionRequired: vine.boolean().optional(),
    inspectionPassed: vine.boolean().optional(),
    workPerformed: vine.string().trim().optional(),
    resolutionNotes: vine.string().trim().optional(),
    preventiveMeasures: vine.string().trim().optional(),
    followUpRequired: vine.boolean().optional(),
    followUpDate: vine.date().optional(),
    guestImpact: vine.boolean().optional(),
    roomOutOfOrder: vine.boolean().optional(),
    outOfOrderFrom: vine.date().optional(),
    outOfOrderTo: vine.date().optional(),
    revenueImpact: vine.number().min(0).optional(),
    guestCompensation: vine.number().min(0).optional(),
    insuranceClaim: vine.boolean().optional(),
    claimNumber: vine.string().trim().maxLength(50).optional(),
    warrantyWork: vine.boolean().optional(),
    warrantyProvider: vine.string().trim().maxLength(200).optional(),
    recurringIssue: vine.boolean().optional(),
    previousRequests: vine.object({}).optional(),
    rootCauseAnalysis: vine.string().trim().optional(),
    qualityRating: vine.number().min(1).max(5).optional(),
    customerSatisfaction: vine.number().min(1).max(5).optional(),
    photos: vine.object({}).optional(),
    documents: vine.object({}).optional(),
    beforePhotos: vine.object({}).optional(),
    afterPhotos: vine.object({}).optional(),
    videoDocumentation: vine.object({}).optional(),
    communicationLog: vine.object({}).optional(),
    escalationHistory: vine.object({}).optional(),
    approvalRequired: vine.boolean().optional(),
    approvedBy: vine.number().positive().optional(),
    budgetCode: vine.string().trim().maxLength(50).optional(),
    costCenter: vine.string().trim().maxLength(50).optional(),
    assetTag: vine.string().trim().maxLength(50).optional(),
    serialNumber: vine.string().trim().maxLength(100).optional(),
    modelNumber: vine.string().trim().maxLength(100).optional(),
    manufacturer: vine.string().trim().maxLength(200).optional(),
    installationDate: vine.date().optional(),
    lastMaintenanceDate: vine.date().optional(),
    nextMaintenanceDate: vine.date().optional(),
    maintenanceHistory: vine.object({}).optional(),
    notes: vine.string().trim().optional(),
    internalNotes: vine.string().trim().optional()
  })
)